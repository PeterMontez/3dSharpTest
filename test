using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;

using _3dSharp;

ApplicationConfiguration.Initialize();

var form = new Form();

form.WindowState = FormWindowState.Maximized;

Graphics g = null;
Bitmap bmp = null;

PictureBox pb = new PictureBox();
pb.Dock = DockStyle.Fill;
form.Controls.Add(pb);

var tm = new Timer();
tm.Interval = 20;

Pen pen = new Pen(Color.Black);

Point3d cameraPos = new Point3d(1, 2, 2);
double FOV = 20;
Ratio ratio= new Ratio(16,9);
Angle angle = new Angle(-70, 10, 0);

tm.Tick += delegate
{

    angle.PitchAdd(1);
    CameraView cameraView = new CameraView(cameraPos, FOV, angle, ratio);

    Point3d fovPoint = cameraView.FOVpoint;

    Point p1 = new Point(pb.Width/2, pb.Height/2);
    Point p2 = new Point(p1.X + (int)(fovPoint.X*15), p1.Y + (int)(fovPoint.Y*15));

    var drawFont = new Font("Arial", 16);

    PointF drawPoint = new PointF(150.0F, 150.0F);
    PointF drawPoint2 = new PointF(150.0F, 200.0F);
    PointF drawPoint3 = new PointF(150.0F, 250.0F);

    g.Clear(Color.White);

    g.DrawString($"{fovPoint.X}, {fovPoint.Y}, {fovPoint.Z}", drawFont, Brushes.Black, drawPoint);
    g.DrawString($"{angle.yaw}, {angle.pitch}, {angle.roll}", drawFont, Brushes.Black, drawPoint2);
    g.DrawString($"{cameraView.plane.X}, {cameraView.plane.Y}, {cameraView.plane.Z}, {cameraView.plane.result}", drawFont, Brushes.Black, drawPoint3);

    g.DrawLine(new Pen(Color.Black), p1, p2);


    pb.Refresh();
};

form.Load += delegate
{
    bmp = new Bitmap(pb.Width, pb.Height);
    g = Graphics.FromImage(bmp);
    g.Clear(Color.White);
    pb.Image = bmp;
    tm.Start();
};

form.KeyPreview = true;
form.KeyDown += (s, e) =>
{
    if (e.KeyCode == Keys.Escape)
        Application.Exit();
};

Application.Run(form);
